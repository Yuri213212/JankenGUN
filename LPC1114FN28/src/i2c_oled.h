#define USING_OLED_FONT_16H	0
#define USING_OLED_FONT_16C	1
#define USING_OLED_FONT_8H	0
#define USING_OLED_FONT_8C	0
#define USING_OLED_FONT_ICO	1

#if USING_I2C_OLED
#define I2COLED_INITFONT	OLED_FONT_ICO

#if I2COLED_INITFONT&0x08
#define I2COLED_INITLEN		64
#define oled_char2buf		oled_char2buf_big
#else
#define I2COLED_INITLEN		128
#define oled_char2buf		oled_char2buf_small
#endif

const uint8_t i2c_oled_initdata[I2COLED_INITLEN]="";
#endif

#if USING_I2C_OLED2
#define I2COLED2_INITFONT	OLED_FONT_ICO

#if I2COLED2_INITFONT&0x08
#define I2COLED2_INITLEN	64
#define oled2_char2buf		oled2_char2buf_big
#else
#define I2COLED2_INITLEN	128
#define oled2_char2buf		oled2_char2buf_small
#endif

const uint8_t i2c_oled2_initdata[I2COLED2_INITLEN]="";
#endif

const uint8_t picture[6][8*16]={
	{//Rock
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x03,0x04,0x05,0x06,0x07,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x09,0x01,0x0a,0x0b,0x0c,0x0d,0x00,
		0x0e,0x0f,0x10,0x11,0x00,0x00,0x00,0x00,0x01,0x12,0x01,0x13,0x01,0x01,0x14,0x15,
		0x16,0x17,0x18,0x19,0x00,0x00,0x00,0x00,0x1a,0x1b,0x1c,0x1d,0x1e,0x1f,0x01,0x20,
		0x21,0x22,0x23,0x00,0x00,0x00,0x00,0x00,0x24,0x01,0x25,0x26,0x27,0x01,0x01,0x28,
		0x29,0x2a,0x2b,0x2c,0x00,0x00,0x00,0x00,0x2d,0x01,0x01,0x2e,0x01,0x01,0x01,0x2f,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x01,0x01,0x01,0x01,0x01,0x31,0x32,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x34,0x01,0x35,0x36,0x37,0x00,
	},{//Scissors
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x39,0x00,0x3a,0x3b,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3c,0x3d,0x3e,0x3f,0x00,
		0x40,0x41,0x42,0x43,0x00,0x00,0x00,0x00,0x00,0x00,0x44,0x45,0x46,0x47,0x48,0x00,
		0x49,0x4a,0x4b,0x00,0x00,0x00,0x00,0x00,0x00,0x4c,0x4d,0x4e,0x4f,0x50,0x00,0x00,
		0x51,0x52,0x53,0x54,0x55,0x56,0x00,0x00,0x00,0x57,0x58,0x59,0x5a,0x5b,0x5c,0x00,
		0x5d,0x2c,0x5e,0x5f,0x60,0x61,0x00,0x00,0x00,0x62,0x63,0x64,0x65,0x66,0x67,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x68,0x01,0x69,0x6a,0x01,0x6b,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6c,0x6d,0x6e,0x6f,0x00,0x00,
	},{//Paper
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x71,0x72,0x73,0x74,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x75,0x76,0x77,0x78,0x79,0x7a,0x00,0x00,
		0x7b,0x7c,0x00,0x00,0x00,0x00,0x00,0x00,0x7d,0x7e,0x7f,0x80,0x81,0x82,0x00,0x00,
		0x83,0x84,0x00,0x00,0x00,0x00,0x00,0x00,0x85,0x86,0x87,0x88,0x89,0x8a,0x8b,0x8c,
		0x8d,0x8e,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x8f,0x01,0x01,0x90,0x91,0x92,0x93,
		0x94,0x95,0x2b,0x2c,0x00,0x00,0x00,0x00,0x00,0x96,0x01,0x97,0x98,0x01,0x99,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9a,0x01,0x9b,0x01,0x9c,0x9d,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x9e,0x9f,0xa0,0xa1,0xa2,0x00,0x00,
	},{//Lose
		0x00,0x00,0x00,0x00,0xa3,0xa4,0xa5,0x00,0x00,0xa6,0xa7,0x8c,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xa8,0x01,0xa9,0xa5,0xa6,0xaa,0x01,0xab,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xac,0xad,0x01,0xa9,0xaa,0x01,0xae,0xaf,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xac,0xad,0x01,0x01,0xae,0xaf,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xa6,0xaa,0x01,0x01,0xa9,0xa5,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xa6,0xaa,0x01,0xae,0xad,0x01,0xa9,0xa5,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xb0,0x01,0xae,0xaf,0xac,0xad,0x01,0xb1,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x9e,0xb2,0xaf,0x00,0x00,0xac,0xb3,0x32,0x00,0x00,0x00,0x00,
	},{//Draw
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb4,0xb5,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xb6,0xb7,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0xb8,0xb9,0xa0,0xba,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0xbb,0xbc,0xbd,0xbe,0x00,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xbf,0x9c,0x9d,0xc0,0xc1,0xc2,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xc3,0xc4,0xc5,0x00,0x00,0xc6,0xc7,0xc8,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xc9,0x01,0xca,0xcb,0xcb,0xcc,0x01,0xcd,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xce,0xcf,0xcf,0xcf,0xcf,0xcf,0xcf,0xd0,0x00,0x00,0x00,0x00,
	},{//Win
		0x00,0x00,0x00,0x00,0x00,0xd1,0xd2,0xd3,0xd4,0xd5,0xd6,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x02,0xd7,0x01,0xd8,0xd9,0x01,0xda,0xdb,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xdc,0x01,0xdd,0x00,0x00,0xde,0x01,0xdf,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xe0,0xe1,0x00,0x00,0x00,0x00,0xe2,0xe3,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xe4,0xe5,0x00,0x00,0x00,0x00,0xe6,0xe7,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xe8,0x01,0xe9,0x00,0x00,0xea,0x01,0xeb,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0xec,0xed,0x01,0xee,0xef,0x01,0xf0,0xf1,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0xf2,0xf3,0x5b,0x6e,0xf4,0xf5,0x00,0x00,0x00,0x00,0x00,
	},
};

#if USING_I2C_OLED
INLINE void i2c_oled_initbufferex(){
}

INLINE void i2c_oled_preparebuffer(){
	register int i;

	if (state[0]>=ST_NULL){
		for (i=0;i<I2COLED_INITLEN;++i){
			oled_char2buf(I2COLED_INITFONT,i,0x00);
		}
	}else{
		for (i=0;i<I2COLED_INITLEN;++i){
			oled_char2buf(I2COLED_INITFONT,i,picture[state[0]][i]);
		}
		switch (state[0]){
		case ST_ROCK:
			oled_char2buf_big(OLED_FONT_16C,0x00,'R');
			oled_char2buf_big(OLED_FONT_16C,0x01,'o');
			oled_char2buf_big(OLED_FONT_16C,0x02,'c');
			oled_char2buf_big(OLED_FONT_16C,0x03,'k');
			break;
		case ST_SCISSORS:
			oled_char2buf_big(OLED_FONT_16C,0x00,'S');
			oled_char2buf_big(OLED_FONT_16C,0x01,'c');
			oled_char2buf_big(OLED_FONT_16C,0x02,'i');
			oled_char2buf_big(OLED_FONT_16C,0x03,'s');
			oled_char2buf_big(OLED_FONT_16C,0x04,'s');
			oled_char2buf_big(OLED_FONT_16C,0x05,'o');
			oled_char2buf_big(OLED_FONT_16C,0x06,'r');
			oled_char2buf_big(OLED_FONT_16C,0x07,'s');
			break;
		case ST_PAPER:
			oled_char2buf_big(OLED_FONT_16C,0x00,'P');
			oled_char2buf_big(OLED_FONT_16C,0x01,'a');
			oled_char2buf_big(OLED_FONT_16C,0x02,'p');
			oled_char2buf_big(OLED_FONT_16C,0x03,'e');
			oled_char2buf_big(OLED_FONT_16C,0x04,'r');
			break;
		}
	}
	if (test){//test mode only
		oled_char2buf_big(OLED_FONT_16C,0x30,toHex(i2c_errc>>28));
		oled_char2buf_big(OLED_FONT_16C,0x31,toHex((i2c_errc>>24)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x32,toHex((i2c_errc>>20)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x33,toHex((i2c_errc>>16)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x34,toHex((i2c_errc>>12)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x35,toHex((i2c_errc>>8)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x36,toHex((i2c_errc>>4)&0x0F));
		oled_char2buf_big(OLED_FONT_16C,0x37,toHex(i2c_errc&0x0F));
	}
}
#endif

#if USING_I2C_OLED2
INLINE void i2c_oled2_initbufferex(){
}

INLINE void i2c_oled2_preparebuffer(){
	register int i;

	if (state[1]>=ST_NULL){
		for (i=0;i<I2COLED2_INITLEN;++i){
			oled2_char2buf(I2COLED2_INITFONT,i,0x00);
		}
	}else{
		for (i=0;i<I2COLED2_INITLEN;++i){
			oled2_char2buf(I2COLED2_INITFONT,i,picture[state[1]][i]);
		}
		switch (state[1]){
		case ST_ROCK:
			oled2_char2buf_big(OLED_FONT_16C,0x00,'R');
			oled2_char2buf_big(OLED_FONT_16C,0x01,'o');
			oled2_char2buf_big(OLED_FONT_16C,0x02,'c');
			oled2_char2buf_big(OLED_FONT_16C,0x03,'k');
			break;
		case ST_SCISSORS:
			oled2_char2buf_big(OLED_FONT_16C,0x00,'S');
			oled2_char2buf_big(OLED_FONT_16C,0x01,'c');
			oled2_char2buf_big(OLED_FONT_16C,0x02,'i');
			oled2_char2buf_big(OLED_FONT_16C,0x03,'s');
			oled2_char2buf_big(OLED_FONT_16C,0x04,'s');
			oled2_char2buf_big(OLED_FONT_16C,0x05,'o');
			oled2_char2buf_big(OLED_FONT_16C,0x06,'r');
			oled2_char2buf_big(OLED_FONT_16C,0x07,'s');
			break;
		case ST_PAPER:
			oled2_char2buf_big(OLED_FONT_16C,0x00,'P');
			oled2_char2buf_big(OLED_FONT_16C,0x01,'a');
			oled2_char2buf_big(OLED_FONT_16C,0x02,'p');
			oled2_char2buf_big(OLED_FONT_16C,0x03,'e');
			oled2_char2buf_big(OLED_FONT_16C,0x04,'r');
			break;
		}
	}
}
#endif
